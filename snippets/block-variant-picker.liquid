{%- comment -%} Sistema Varianti Premium Fabindia con Tooltip {%- endcomment -%}
<div class="fr-variant-system" {% if block.settings.product_dynamic_variants_enable %}data-dynamic-variants-enabled{% endif %} {{ block.shopify_attributes }}>
  
  {%- comment -%} Sistema Varianti Colore Premium {%- endcomment -%}
  {%- if block.settings.show_color_variants and product.metafields.custom.related_products != blank -%}
    {%- liquid
      assign related_handles_string = product.metafields.custom.related_products | strip
      assign related_handles = related_handles_string | split: ','
      assign size_option_index = -1
      
      for option in product.options_with_values
        assign option_downcase = option.name | downcase
        if option_downcase contains 'size' or option_downcase contains 'taglia'
          assign size_option_index = forloop.index0
          break
        endif
      endfor
      
      assign color_count = 0
      for handle in related_handles
        assign handle_clean = handle | strip
        assign variant_product = all_products[handle_clean]
        if variant_product != blank and variant_product.available
          assign color_count = color_count | plus: 1
        endif
      endfor
    -%}
    
    <div class="fr-container" 
         data-size-index="{{ size_option_index }}" 
         data-color-count="{{ color_count }}"
         data-tooltip-duration="{{ block.settings.tooltip_duration }}"
         data-product-id="{{ product.id }}"
         data-product-variants="{{ product.variants | json | escape }}">
      
      {%- comment -%} Selettore Taglie Premium con Tooltip {%- endcomment -%}
      {%- unless product.has_only_default_variant -%}
        <div class="fr-size-selector">
          {%- for option in product.options_with_values -%}
            {%- liquid
              if block.settings.color_swatches
                assign is_color = false
                assign color_option_index = 0
                assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase
                assign color_option_index = forloop.index0
                assign downcased_option = option.name | downcase
                if downcased_option contains swatch_trigger
                  assign is_color = true
                elsif swatch_trigger == 'color' and downcased_option contains 'colour'
                  assign is_color = true
                endif
              endif
            -%}
            
            {%- if block.settings.picker_type == 'button' -%}
              <div class="fr-option-group">
                {%- render 'variant-button',
                  block: block,
                  product: product,
                  form_id: form_id,
                  section_id: section_id,
                  option: option,
                  forloop: forloop,
                  variant_labels: block.settings.variant_labels,
                  is_color: is_color,
                  color_option_index: color_option_index,
                  connect_to_sizechart: connect_to_sizechart,
                  sizechart_index: sizechart_index
                -%}
              </div>
            {%- else -%}
              <div class="fr-option-group">
                {%- render 'variant-dropdown',
                  product: product,
                  form_id: form_id,
                  section_id: section_id,
                  option: option,
                  forloop: forloop,
                  variant_labels: block.settings.variant_labels
                -%}
              </div>
            {%- endif -%}
          {%- endfor -%}
          
          {%- comment -%} Tooltip Elegante per Taglie Non Disponibili {%- endcomment -%}
          {%- if block.settings.enable_tooltip -%}
            <div class="fr-size-tooltip" style="display: none;">
              <div class="fr-tooltip-content">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="10"/>
                  <path d="M12 8v4" stroke-linecap="round"/>
                  <circle cx="12" cy="16" r="1" fill="currentColor"/>
                </svg>
                <span>{{ block.settings.tooltip_text }}</span>
              </div>
              <div class="fr-tooltip-arrow"></div>
            </div>
          {%- endif -%}
        </div>
      {%- endunless -%}
      
      {%- comment -%} Header Varianti Colore {%- endcomment -%}
      <div class="fr-colors-header">
        <h3 class="fr-colors-title">
          {{ block.settings.section_title_2 }}
          
        </h3>
        <span class="fr-size-badge" style="display: none;">
            <span class="fr-size-text"></span>
          </span>
      </div>
      
      {%- comment -%} Griglia Varianti Colore Premium {%- endcomment -%}
      <div class="fr-colors-grid">
        {%- for handle in related_handles -%}
          {%- assign handle_clean = handle | strip -%}
          {%- assign variant_product = all_products[handle_clean] -%}
          
          {%- if variant_product != blank and variant_product.available -%}
            {%- assign variant_title = variant_product.title -%}
            {%- if block.settings.remove_string != blank -%}
              {%- assign variant_title = variant_title | remove: block.settings.remove_string | strip -%}
            {%- endif -%}
            
            {%- liquid
              assign swatch_image = nil
              
              if block.settings.use_metafield_swatch and variant_product.metafields.custom.swatch_image != blank
                assign swatch_image = variant_product.metafields.custom.swatch_image
              elsif block.settings.use_second_image_swatch and variant_product.images.size > 1
                assign swatch_image = variant_product.images[1]
              else
                assign swatch_image = variant_product.featured_image
              endif
            -%}
            
            <a href="{{ variant_product.url }}" 
               class="fr-color-card"
               data-handle="{{ handle_clean }}"
               data-variants="{{ variant_product.variants | json | escape }}">
              
              <div class="fr-card-image">
                {%- if swatch_image -%}
                  <img src="{{ swatch_image | img_url: '400x400' }}"
                       alt="{{ variant_product.title | escape }}"
                       loading="lazy"
                       class="fr-main-img">
                {%- else -%}
                  {{ 'product-1' | placeholder_svg_tag: 'fr-main-img' }}
                {%- endif -%}
                
                {%- if block.settings.enable_image_swatches -%}
                  <div class="fr-swatch" 
                       style="width: {{ block.settings.swatch_size }}px; 
                              height: {{ block.settings.swatch_size }}px;
                              bottom: {{ block.settings.swatch_position }}px;
                              right: {{ block.settings.swatch_position }}px;">
                    {%- if swatch_image -%}
                      <img src="{{ swatch_image | img_url: '150x150' }}"
                           alt="Swatch"
                           loading="lazy">
                    {%- endif -%}
                  </div>
                {%- endif -%}
                
                <div class="fr-unavailable">
                  <span class="fr-unavailable-icon">ðŸš«</span>
                </div>
              </div>
              
              <div class="fr-card-info">
                <h4 class="fr-card-title">{{ variant_title }}</h4>
                {%- if block.settings.show_prices -%}
                  <div class="fr-card-price">
                    {%- if variant_product.compare_at_price > variant_product.price -%}
                      <span class="fr-price-old">{{ variant_product.compare_at_price | money }}</span>
                      <span class="fr-price-current">{{ variant_product.price | money }}</span>
                    {%- else -%}
                      <span class="fr-price-current">{{ variant_product.price | money }}</span>
                    {%- endif -%}
                  </div>
                {%- endif -%}
              </div>
            </a>
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>
    
    <style>
      /* Reset e Base */
      #shopify-section-{{ section.id }} .fr-variant-system * {
        box-sizing: border-box;
      }

      h4.fr-card-title {
    text-transform: capitalize;
}
      
      #shopify-section-{{ section.id }} .fr-container {
        margin-top: {{ block.settings.margin_top_desktop }}px;
        margin-bottom: {{ block.settings.margin_bottom_desktop }}px;
        padding: {{ block.settings.padding_top_desktop }}px {{ block.settings.padding_horizontal_desktop }}px {{ block.settings.padding_bottom_desktop }}px;
        background: {{ block.settings.section_background }};
        border-radius: {{ block.settings.border_radius }}px;
        position: relative;
        {%- if block.settings.show_border -%}
          border: 1px solid {{ block.settings.border_color }};
        {%- endif -%}
      }
      
      /* Selettore Taglie Premium */
      #shopify-section-{{ section.id }} .fr-size-selector {
        margin-bottom: 28px;
        position: relative;
      }
      
      #shopify-section-{{ section.id }} .fr-option-group {
        margin-bottom: 14px;
      }
      
      /* Override stili varianti per eleganza */
      #shopify-section-{{ section.id }} .fr-size-selector .variant__button-label {
        border-radius: 10px !important;
        padding: 11px 18px;
        font-size: 14px !important;
        font-weight: 500 !important;
        letter-spacing: 0.01em !important;
        transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1) !important;
        border: 1.5px solid #E5DDD5 !important;
        background: white !important;
        color: #3E3E3E !important;
        position: relative;
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector .variant__button-label:hover {
        background-color: #F0E6E0 !important;
        border-color: #B5A397 !important;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.06);
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector input[type=radio]:checked + label {
        background: #C33A32 !important;
        border-color: #C33A32 !important;
        color: white !important;
        font-weight: 600 !important;
        box-shadow: 0 2px 12px rgba(195, 58, 50, 0.25) !important;
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector input[type=radio].disabled + label {
        opacity: 0.5;
        cursor: not-allowed !important;
      }
      
      /* Label con indicatore non disponibile */
      #shopify-section-{{ section.id }} .fr-size-selector .variant__button-label.fr-unavailable-size {
        border-color: #FCA5A5 !important;
        background: #FEF3F2 !important;
        color: #991B1B !important;
        cursor: not-allowed !important;
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector .variant__button-label.fr-unavailable-size:hover {
        background: #FEE2E2 !important;
        border-color: #F87171 !important;
        transform: none;
      }
      
      {%- if block.settings.auto_fit_variants_desktop -%}
      #shopify-section-{{ section.id }} .fr-size-selector .variant-input-wrap {
        display: flex !important;
        gap: {{ block.settings.variant_gap }}px !important;
        flex-wrap: nowrap !important;
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector .variant-input {
        flex: 1;
        min-width: 0;
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector .variant__button-label {
        width: 100% !important;
        text-align: center !important;
      }
      {%- endif -%}
      
      /* Tooltip Elegante e Raffinato */
      #shopify-section-{{ section.id }} .fr-size-tooltip {
        position: absolute;
        z-index: 1000;
        pointer-events: none;
        animation: tooltipFadeIn 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        transform: translateX(-50%);
      }
      
      @keyframes tooltipFadeIn {
        from { 
          opacity: 0; 
          transform: translateX(-50%) translateY(5px);
        }
        to { 
          opacity: 1; 
          transform: translateX(-50%) translateY(0);
        }
      }
      
      #shopify-section-{{ section.id }} .fr-tooltip-content {
        background: linear-gradient(135deg, #1F2937 0%, #111827 100%);
        color: white;
        padding: 10px 14px;
        border-radius: 8px;
        font-size: 13px;
        font-weight: 500;
        box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.25),
                    0 8px 10px -6px rgba(0, 0, 0, 0.15);
        display: flex;
        align-items: center;
        gap: 8px;
        white-space: nowrap;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
      }
      
      #shopify-section-{{ section.id }} .fr-tooltip-content svg {
        flex-shrink: 0;
        width: 16px;
        height: 16px;
        color: #FCA5A5;
      }
      
      #shopify-section-{{ section.id }} .fr-tooltip-arrow {
        position: absolute;
        width: 10px;
        height: 10px;
        background: #1F2937;
        transform: rotate(45deg);
        bottom: -5px;
        left: 50%;
        margin-left: -5px;
      }
      
      /* Header Colori */
      #shopify-section-{{ section.id }} .fr-colors-header {
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 12px;
      }
      
      #shopify-section-{{ section.id }} .fr-colors-title {
        font-size: {{ block.settings.title_size }}px;
        font-weight: 600;
        color: {{ block.settings.text_color }};
        margin: 0;
        letter-spacing: 0.01em;
      }
      
      #shopify-section-{{ section.id }} .fr-size-badge {
        display: inline-flex !important;
        background: #F0E6E0;
        padding: 5px 12px;
        border-radius: 16px;
        font-size: 13px;
        font-weight: 500;
        color: #C33A32;
        align-items: center;
        animation: badgeFade 0.3s ease;
      }
      
      @keyframes badgeFade {
        from { opacity: 0; transform: scale(0.9); }
        to { opacity: 1; transform: scale(1); }
      }
      
      #shopify-section-{{ section.id }} .fr-size-badge:before {
        content: '{{ block.settings.size_prefix }}';
        margin-right: 3px;
      }
      
      /* Griglia Colori Premium */
      #shopify-section-{{ section.id }} .fr-colors-grid {
        display: grid;
        gap: {{ block.settings.grid_gap }}px;
        {%- if block.settings.auto_fit_colors_desktop -%}
          grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        {%- else -%}
          grid-template-columns: repeat({{ block.settings.colors_per_row_desktop }}, 1fr);
        {%- endif -%}
      }
      
      #shopify-section-{{ section.id }} .fr-color-card {
        text-decoration: none;
        display: block;
        transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
      }
      
      #shopify-section-{{ section.id }} .fr-color-card:hover {
        transform: translateY(-6px);
      }
      
      #shopify-section-{{ section.id }} .fr-color-card.size-unavailable {
        opacity: 0.4;
        pointer-events: none;
        filter: grayscale(0.8);
      }
      
      #shopify-section-{{ section.id }} .fr-card-image {
        position: relative;
        padding-bottom: 100%;
        overflow: hidden;
        border-radius: {{ block.settings.image_radius }}px;
        background: #FAFAFA;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
        transition: all 0.25s ease;
      }
      
      #shopify-section-{{ section.id }} .fr-color-card:hover .fr-card-image {
        box-shadow: 0 12px 24px rgba(0, 0, 0, 0.12);
      }
      
      #shopify-section-{{ section.id }} .fr-main-img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
      
      /* Swatch Premium */
      #shopify-section-{{ section.id }} .fr-swatch {
        position: absolute;
        border-radius: {%- if block.settings.swatch_shape == 'circle' -%}50%{%- else -%}{{ block.settings.swatch_border_radius }}px{%- endif -%};
        overflow: hidden;
        border: 2.5px solid white;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
        transition: transform 0.25s ease;
      }
      
      #shopify-section-{{ section.id }} .fr-color-card:hover .fr-swatch {
        transform: scale(1.08);
      }
      
      #shopify-section-{{ section.id }} .fr-swatch img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
      
      /* Overlay Non Disponibile con Emoji */
      #shopify-section-{{ section.id }} .fr-unavailable {
        position: absolute;
        inset: 0;
        background: rgba(255, 255, 255, 0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.25s ease;
        pointer-events: none;
      }
      
      #shopify-section-{{ section.id }} .size-unavailable .fr-unavailable {
        opacity: 1;
      }
      
      #shopify-section-{{ section.id }} .fr-unavailable-icon {
        font-size: 36px;
        opacity: 0.4;
        filter: grayscale(0.5);
      }
      
      /* Info Card */
      #shopify-section-{{ section.id }} .fr-card-info {
        padding: 12px 2px 2px;
        text-align: {{ block.settings.text_align }};
      }
      
      /* Titolo Card con limite 1 riga */
      #shopify-section-{{ section.id }} .fr-card-title {
        font-size: {{ block.settings.name_size }}px;
        color: {{ block.settings.text_color }};
        margin: 0 0 5px 0;
        font-weight: 500;
        line-height: 1.3;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        {%- if block.settings.uppercase_names -%}
          text-transform: uppercase;
          letter-spacing: 0.04em;
          font-size: {{ block.settings.name_size | minus: 1 }}px;
        {%- endif -%}
      }
      
      #shopify-section-{{ section.id }} .fr-card-price {
        display: flex;
        gap: 6px;
        align-items: center;
        {%- if block.settings.text_align == 'center' -%}
          justify-content: center;
        {%- elsif block.settings.text_align == 'right' -%}
          justify-content: flex-end;
        {%- endif -%}
      }
      
      #shopify-section-{{ section.id }} .fr-price-old {
        font-size: {{ block.settings.price_size | minus: 1 }}px;
        color: #9CA3AF;
        text-decoration: line-through;
      }
      
      #shopify-section-{{ section.id }} .fr-price-current {
        font-size: {{ block.settings.price_size }}px;
        color: #C33A32;
        font-weight: 600;
      }
      
      /* Mobile Responsive Premium */
      @media (max-width: 767px) {
        #shopify-section-{{ section.id }} .fr-container {
          margin-top: {{ block.settings.margin_top_mobile }}px;
          margin-bottom: {{ block.settings.margin_bottom_mobile }}px;
          padding: {{ block.settings.padding_top_mobile }}px {{ block.settings.padding_horizontal_mobile }}px {{ block.settings.padding_bottom_mobile }}px;
        }
        
        {%- if block.settings.auto_fit_variants_mobile -%}
        #shopify-section-{{ section.id }} .fr-size-selector .variant-input-wrap {
          display: flex !important;
          overflow-x: auto !important;
          -webkit-overflow-scrolling: touch !important;
          gap: {{ block.settings.variant_gap }}px !important;
          padding-bottom: 6px;
          margin-bottom: 6px;
        }
        
        #shopify-section-{{ section.id }} .fr-size-selector .variant-input {
          flex: 0 0 auto;
        }
        
        #shopify-section-{{ section.id }} .fr-size-selector .variant__button-label {
          white-space: nowrap !important;
        }
        {%- endif -%}
        
        #shopify-section-{{ section.id }} .fr-colors-grid {
          {%- if block.settings.auto_fit_colors_mobile -%}
            display: flex !important;
            overflow-x: auto !important;
            -webkit-overflow-scrolling: touch !important;
            gap: {{ block.settings.grid_gap }}px !important;
            padding-bottom: 10px;
          {%- else -%}
            grid-template-columns: repeat({{ block.settings.colors_per_row_mobile }}, 1fr);
          {%- endif -%}
        }
        
        {%- if block.settings.auto_fit_colors_mobile -%}
        #shopify-section-{{ section.id }} .fr-color-card {
          flex: 0 0 calc(50% - {{ block.settings.grid_gap }}px / 2);
          min-width: 140px;
        }
        {%- endif -%}
        
        {%- if block.settings.hide_swatch_mobile -%}
        #shopify-section-{{ section.id }} .fr-swatch {
          display: none !important;
        }
        {%- endif -%}
        
        /* Tooltip mobile piÃ¹ compatto e piÃ¹ in alto */
        #shopify-section-{{ section.id }} .fr-tooltip-content {
          padding: 8px 12px;
          font-size: 12px;
        }
        
        #shopify-section-{{ section.id }} .fr-tooltip-content svg {
          width: 14px;
          height: 14px;
        }
        
        /* Aggiusta posizione tooltip su mobile */
        #shopify-section-{{ section.id }} .fr-size-tooltip {
          transform: translateX(-50%) translateY(-5px);
        }
      }

      
      
      /* Scrollbar Elegante */
      #shopify-section-{{ section.id }} .fr-size-selector .variant-input-wrap::-webkit-scrollbar,
      #shopify-section-{{ section.id }} .fr-colors-grid::-webkit-scrollbar {
        height: 5px;
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector .variant-input-wrap::-webkit-scrollbar-track,
      #shopify-section-{{ section.id }} .fr-colors-grid::-webkit-scrollbar-track {
        background: #F5F5F5;
        border-radius: 10px;
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector .variant-input-wrap::-webkit-scrollbar-thumb,
      #shopify-section-{{ section.id }} .fr-colors-grid::-webkit-scrollbar-thumb {
        background: #D1D5DB;
        border-radius: 10px;
      }
      
      #shopify-section-{{ section.id }} .fr-size-selector .variant-input-wrap::-webkit-scrollbar-thumb:hover,
      #shopify-section-{{ section.id }} .fr-colors-grid::-webkit-scrollbar-thumb:hover {
        background: #B5A397;
      }
    </style>
    
    <script>
      (function() {
        const container = document.querySelector('.fr-container');
        if (!container) return;
        
        const sizeIndex = parseInt(container.dataset.sizeIndex);
        const hasSize = sizeIndex >= 0;
        const tooltipDuration = parseInt(container.dataset.tooltipDuration) || 2000;
        const productVariantsData = container.dataset.productVariants;
        const enableTooltip = {{ block.settings.enable_tooltip | json }};
        
        const tooltip = document.querySelector('.fr-size-tooltip');
        const sizeBadge = document.querySelector('.fr-size-badge');
        const sizeText = document.querySelector('.fr-size-text');
        const colorCards = document.querySelectorAll('.fr-color-card');
        
        let tooltipTimeout;
        let currentSelectedSize = null;
        let productVariants = [];
        let isMobile = window.innerWidth <= 767;
        
        // Parse product variants
        try {
          productVariants = JSON.parse(productVariantsData || '[]');
        } catch (e) {
          console.error('Error parsing product variants:', e);
        }
        
        // Funzione per mostrare tooltip
        function showTooltip(element) {
          if (!tooltip || !enableTooltip) return;
          
          const rect = element.getBoundingClientRect();
          const containerRect = container.getBoundingClientRect();
          
          // Calcola la posizione centrata sopra l'elemento
          const tooltipHeight = 50; // Altezza approssimativa del tooltip
          const gap = isMobile ? 15 : 10; // Spazio tra elemento e tooltip
          
          // Posizione X: centro dell'elemento
          const centerX = rect.left - containerRect.left + (rect.width / 2);
          tooltip.style.left = centerX + 'px';
          
          // Posizione Y: sopra l'elemento
          const topY = rect.top - containerRect.top - tooltipHeight - gap;
          tooltip.style.top = topY + 'px';
          
          tooltip.style.display = 'block';
          
          // Su mobile, nasconde dopo il tempo configurato
          if (isMobile) {
            clearTimeout(tooltipTimeout);
            tooltipTimeout = setTimeout(() => {
              hideTooltip();
            }, tooltipDuration);
          }
        }
        
        function hideTooltip() {
          if (!tooltip) return;
          tooltip.style.display = 'none';
          clearTimeout(tooltipTimeout);
        }
        
        function getSelectedOptions() {
          const options = [];
          
          // Check radio buttons
          const radios = document.querySelectorAll('.fr-size-selector input[type="radio"]:checked');
          radios.forEach((radio) => {
            const label = document.querySelector(`label[for="${radio.id}"]`);
            if (label) {
              options.push(label.textContent.trim());
            }
          });
          
          // Check dropdowns
          const selects = document.querySelectorAll('.fr-size-selector select');
          selects.forEach((select) => {
            if (select.selectedIndex > 0) {
              options.push(select.options[select.selectedIndex].text.trim());
            }
          });
          
          return options;
        }
        
        function getSelectedSize() {
          if (!hasSize) return null;
          
          const options = getSelectedOptions();
          if (options.length > sizeIndex) {
            return options[sizeIndex];
          }
          
          return null;
        }
        
        function isSizeAvailableInCurrentProduct(size) {
          if (!size || !hasSize) return true;
          
          for (const variant of productVariants) {
            const variantSize = variant[`option${sizeIndex + 1}`];
            if (variantSize === size && variant.available) {
              return true;
            }
          }
          
          return false;
        }
        
        function updateSizeLabels() {
          if (!hasSize) return;
          
          // Aggiorna i label delle taglie con indicatore visivo
          document.querySelectorAll('.fr-size-selector .variant__button-label').forEach(label => {
            const size = label.textContent.trim();
            const isAvailable = isSizeAvailableInCurrentProduct(size);
            
            // Rimuovi vecchi event listeners
            const newLabel = label.cloneNode(true);
            label.parentNode.replaceChild(newLabel, label);
            
            if (!isAvailable) {
              newLabel.classList.add('fr-unavailable-size');
              
              if (enableTooltip) {
                // Setup eventi hover/click per tooltip
                if (!isMobile) {
                  newLabel.addEventListener('mouseenter', function() {
                    showTooltip(this);
                  });
                  
                  newLabel.addEventListener('mouseleave', function() {
                    hideTooltip();
                  });
                } else {
                  newLabel.addEventListener('click', function(e) {
                    // Previeni la selezione della taglia non disponibile
                    const input = document.getElementById(this.getAttribute('for'));
                    if (input && !input.checked) {
                      e.preventDefault();
                      showTooltip(this);
                    }
                  });
                }
              }
            } else {
              newLabel.classList.remove('fr-unavailable-size');
            }
          });
        }
        
        function updateColorVariants() {
          const selectedSize = getSelectedSize();
          
          // Update size badge
          if (sizeBadge && sizeText) {
            if (selectedSize) {
              sizeText.textContent = selectedSize;
              sizeBadge.style.display = 'inline-flex';
            } else {
              sizeBadge.style.display = 'none';
            }
          }
          
          if (!hasSize) return;
          
          // Mostra tooltip se la taglia selezionata non Ã¨ disponibile
          if (enableTooltip && selectedSize && !isSizeAvailableInCurrentProduct(selectedSize)) {
            const selectedLabel = document.querySelector('.fr-size-selector input[type="radio"]:checked + label');
            if (selectedLabel) {
              showTooltip(selectedLabel);
            }
          } else {
            hideTooltip();
          }
          
          // Update color cards availability
          colorCards.forEach(card => {
            const variantsData = card.dataset.variants;
            if (!variantsData) return;
            
            try {
              const variants = JSON.parse(variantsData);
              let isAvailable = false;
              
              if (!selectedSize) {
                isAvailable = true;
              } else {
                for (const variant of variants) {
                  const variantSize = variant[`option${sizeIndex + 1}`];
                  if (variantSize === selectedSize && variant.available) {
                    isAvailable = true;
                    break;
                  }
                }
              }
              
              if (isAvailable) {
                card.classList.remove('size-unavailable');
              } else {
                card.classList.add('size-unavailable');
              }
            } catch (e) {
              console.error('Error parsing variant data:', e);
            }
          });
          
          currentSelectedSize = selectedSize;
        }
        
        // Rileva resize per mobile/desktop
        window.addEventListener('resize', function() {
          const wasMobile = isMobile;
          isMobile = window.innerWidth <= 767;
          
          // Se cambia da mobile a desktop o viceversa, riaggiorna i labels
          if (wasMobile !== isMobile) {
            updateSizeLabels();
          }
        });
        
        // Inizializzazione
        updateSizeLabels();
        setTimeout(() => updateColorVariants(), 100);
        
        // Ascolta cambiamenti taglie
        const sizeInputs = document.querySelectorAll('.fr-size-selector input[type="radio"], .fr-size-selector select');
        sizeInputs.forEach(input => {
          input.addEventListener('change', function() {
            setTimeout(() => updateColorVariants(), 50);
          });
        });
        
        // Ascolta eventi variant:change
        document.addEventListener('variant:change', function() {
          setTimeout(() => {
            updateSizeLabels();
            updateColorVariants();
          }, 50);
        });
        
        // Nascondi tooltip quando si clicca fuori
        if (enableTooltip) {
          document.addEventListener('click', function(e) {
            if (!e.target.closest('.fr-size-selector')) {
              hideTooltip();
            }
          });
        }
      })();
    </script>
    
  {%- else -%}
    {%- comment -%} Variant picker standard senza colori {%- endcomment -%}
    {%- unless product.has_only_default_variant -%}
      {%- for option in product.options_with_values -%}
        {%- liquid
          if block.settings.color_swatches
            assign is_color = false
            assign color_option_index = 0
            assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase
            assign color_option_index = forloop.index0
            assign downcased_option = option.name | downcase
            if downcased_option contains swatch_trigger
              assign is_color = true
            elsif swatch_trigger == 'color' and downcased_option contains 'colour'
              assign is_color = true
            endif
          endif
        -%}
        
        {%- if block.settings.picker_type == 'button' -%}
          {%- render 'variant-button',
            block: block,
            product: product,
            form_id: form_id,
            section_id: section_id,
            option: option,
            forloop: forloop,
            variant_labels: block.settings.variant_labels,
            is_color: is_color,
            color_option_index: color_option_index,
            connect_to_sizechart: connect_to_sizechart,
            sizechart_index: sizechart_index
          -%}
        {%- else -%}
          {%- render 'variant-dropdown',
            product: product,
            form_id: form_id,
            section_id: section_id,
            option: option,
            forloop: forloop,
            variant_labels: block.settings.variant_labels
          -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endunless -%}
  {%- endif -%}
</div>